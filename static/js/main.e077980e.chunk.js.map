{"version":3,"sources":["components/Header.jsx","constants.js","components/MainTabs.jsx","components/ConfirmDialog.jsx","components/PaperLinkTabs.jsx","components/DesiredSelect.jsx","api.js","utils.js","validators.js","hooks.js","pages/AddInfo.jsx","pages/ListInfo.jsx","reducers/notification.js","reducers/root.js","store.js","config/themeing.js","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","typographyStyles","flex","fontSize","padding","fontWeight","Header","classes","AppBar","style","zIndex","position","Toolbar","Typography","className","variant","AcUnit","ROUTE_MAJOR_ADD_INFO","ROUTE_MAJOR_LIST_INFO","ROUTE_MINOR_CUSTOMER","ROUTE_MINOR_FIELD","SET_FLASH_MESSAGE","UNSET_FLASH_MESSAGE","SET_DIALOG","UNSET_DIALOG","STORES_VALUES","STORES","label","value","STRING_T","NUMBER_T","EMAIL_T","DATE_T","TYPES","TYPES_VALUES","BLACKLIST_CUSTOM_FIELD_NAMES_IN_LOWERCASE","STOCK_ERROR_FLASH","MainTabs","useState","setValue","pathname","useLocation","useEffect","val","split","Paper","square","Tabs","indicatorColor","textColor","onChange","_event","newValue","aria-label","Tab","component","Link","to","ConfirmDialog","dispatch","useDispatch","useSelector","state","notification","dialog","title","body","onConfirm","onCancel","Dialog","open","onClose","type","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","PaperLinkTabs","majorRoute","labelWithMinorRouteList","minorRoutes","map","route","slice","found","forEach","currentRoute","idx","event","minorRoute","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","DesiredSelect","inputLabel","selectionData","control","onSelect","FormControl","InputLabel","Select","labelId","target","MenuItem","axiosInstance","axios","create","responseType","baseURL","process","responseToData","response","data","listFields","storeName","get","params","store","then","dataFormal","handlerFromSetter","setter","e","stringExists","input","String","length","checkIfEmail","isEmail","checkIfDate","isDate","useSuccessFlash","isNumeric","flashMessage","payload","message","severity","useErrorFlash","useDialogSetter","useDialogClose","ROUTE_ADD_CUSTOMER","ROUTE_ADD_FIELD","root","width","additionalFieldsSeperatorTitle","marginLeft","fieldDeletionButton","additionalFieldsTitle","marginBottom","addFieldGrid","submitButton","AdditionalFields","propertyMap","setDataForParent","dataRetrievalSignal","formState","setFormState","Object","keys","initialFormState","reduce","accum","currKey","fieldName","index","fieldType","Inner","TextField","utils","DateFnsUtils","format","date","KeyboardButtonProps","AddCustomer","firstName","setFirstName","lastName","setLastName","email","setEmail","address","setAddress","phone","setPhone","Date","dob","setDob","setStore","formValid","setFormValid","propertyMapForAdditional","setPropertyMapForAdditional","additionalDataRetSignal","setAdditionalDataRetSignal","additionalData","setAdditionalData","indexOf","toLowerCase","fields","catch","err","console","error","some","current","Grid","container","wrap","noValidate","autoComplete","item","sm","multiline","rowsMax","defaultCountry","xs","customerData","birthday","additionalFields","post","disabled","AddField","chosenType","setChosenType","setFieldName","isValid","setIsValid","fieldMap","setFieldMap","triggerFieldsRetSwitch","setTriggerFieldsRetSwitch","setErrorFlash","setSuccessFlash","dialogSetter","dialogClose","retFieldsAgain","typeName","md","size","desc","delete","deleteField","startIcon","Delete","createField","MINOR_ROUTES_WITH_LABELS","AddInfo","direction","exact","from","path","BasicPagination","pages","Pagination","count","heading","typography","pxToRem","fontWeightRegular","selectContainingPanel","display","justifyContent","CustomerListing","currentStore","currentPage","setCurrentPage","pageCount","setPageCount","customerList","setCustomerList","emptyFieldDataForStore","setEmptyFieldDataForStore","recheckSwitch","setRecheckSwitch","setFailureFlash","customerCount","Math","ceil","genData","limit","skip","getCustomers","customers","Card","toDateString","dateVal","page","number","ListInfo","setCurrentStore","initialState","notificationReducer","action","rootReducer","combineReducers","createStore","createMuiTheme","palette","primary","main","purple","Alert","props","elevation","App","dialogOpen","snackClose","CssBaseline","ThemeProvider","AddInfoPage","ListInfoPage","Snackbar","autoHideDuration","AppWithRedux","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e077980e.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { AcUnit as AcUnitIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  typographyStyles: {\n    flex: 1,\n    fontSize: '4em',\n    padding: '0.075em 0',\n    fontWeight: 'bolder',\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar style={{ zIndex: 0 }} position='relative'>\n      <Toolbar>\n        <Typography className={classes.typographyStyles} variant='h1'>\n          Customer and Field Manager\n        </Typography>\n        <AcUnitIcon />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","const ROUTE_ROOT = '/';\nconst ROUTE_MAJOR_ADD_INFO = '/add';\nconst ROUTE_MAJOR_LIST_INFO = '/list';\n\nconst ROUTE_MINOR_CUSTOMER = 'customer';\nconst ROUTE_MINOR_FIELD = 'field';\n\nconst SET_FLASH_MESSAGE = 'SET_FLASH_MESSAGE';\nconst UNSET_FLASH_MESSAGE = 'UNSET_FLASH_MESSAGE';\n\nconst SET_DIALOG = 'SET_DIALOG';\nconst UNSET_DIALOG = 'UNSERT_DIALOG';\n\nconst ELECTRONICS = 'electronics';\nconst TOYS = 'toys';\n\nconst STORES_VALUES = [ELECTRONICS, TOYS];\n\nconst STORES = [\n  { label: 'Electronics Store', value: 'electronics' },\n  { label: 'Toy Store', value: 'toys' },\n];\n\nconst STRING_T = 'string';\nconst NUMBER_T = 'number';\nconst EMAIL_T = 'email';\nconst DATE_T = 'date';\n\nconst TYPES = [\n  { label: 'String', value: STRING_T },\n  { label: 'Number', value: NUMBER_T },\n  { label: 'Email', value: EMAIL_T },\n  { label: 'Date', value: DATE_T },\n];\n\nconst TYPES_VALUES = [STRING_T, NUMBER_T, EMAIL_T, DATE_T];\n\nconst BLACKLIST_CUSTOM_FIELD_NAMES_IN_LOWERCASE = [\n  'firstname',\n  'lastname',\n  'email',\n  'dob',\n  'birthday',\n  'address',\n  'phone',\n  'store',\n];\n\nconst ERROR = 'error';\nconst SUCCESS = 'success';\n\nconst STOCK_ERROR_FLASH =\n  'Oh no, it looks like an unexpected error occured... Please try again later';\n\nexport {\n  ROUTE_ROOT,\n  ROUTE_MAJOR_ADD_INFO,\n  ROUTE_MAJOR_LIST_INFO,\n  ROUTE_MINOR_CUSTOMER,\n  ROUTE_MINOR_FIELD,\n  SET_FLASH_MESSAGE,\n  UNSET_FLASH_MESSAGE,\n  SET_DIALOG,\n  UNSET_DIALOG,\n  STORES_VALUES,\n  STORES,\n  TYPES,\n  TYPES_VALUES,\n  BLACKLIST_CUSTOM_FIELD_NAMES_IN_LOWERCASE,\n  STRING_T,\n  NUMBER_T,\n  EMAIL_T,\n  DATE_T,\n  ERROR,\n  SUCCESS,\n  STOCK_ERROR_FLASH,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Paper, Tabs, Tab } from '@material-ui/core';\nimport { useLocation, Link } from 'react-router-dom';\nimport { ROUTE_MAJOR_ADD_INFO, ROUTE_MAJOR_LIST_INFO } from '../constants';\n\nconst MainTabs = () => {\n  // const [value, setValue] = useStateFromRoute();\n  const [value, setValue] = useState(0);\n  const { pathname } = useLocation();\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const val = pathname.split('/')[1];\n    if (val === 'add') setValue(0);\n    else setValue(1);\n  }, [pathname]);\n\n  return (\n    <Paper style={{ zIndex: 1 }} square>\n      <Tabs\n        value={value}\n        indicatorColor='primary'\n        textColor='primary'\n        onChange={handleChange}\n        aria-label='disabled tabs example'\n      >\n        <Tab\n          label='Add Information'\n          component={Link}\n          to={ROUTE_MAJOR_ADD_INFO}\n          // onChange={routeSwitch(ROUTE_MAJOR_ADD_INFO)}\n        />\n        <Tab\n          label='List Information'\n          component={Link}\n          to={ROUTE_MAJOR_LIST_INFO}\n        />\n      </Tabs>\n    </Paper>\n  );\n};\n\nexport default MainTabs;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\nimport { UNSET_DIALOG } from '../constants';\n\nconst ConfirmDialog = () => {\n  const dispatch = useDispatch();\n  const { title, body, onConfirm, onCancel } = useSelector(\n    (state) => state.notification.dialog\n  );\n\n  const handleClose = () => {\n    dispatch({ type: UNSET_DIALOG });\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {body}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={onConfirm} color='primary' autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ConfirmDialog;\n","import { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Paper, Tabs, Tab } from '@material-ui/core';\n\nconst PaperLinkTabs = ({ majorRoute, labelWithMinorRouteList }) => {\n  const minorRoutes = labelWithMinorRouteList.map(({ route }) => route);\n  const [value, setValue] = useState(0);\n  const { pathname } = useLocation();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const val = pathname.slice(1).split('/')[1];\n    let found = false;\n    minorRoutes.forEach((currentRoute, idx) => {\n      if (currentRoute === val) {\n        setValue(idx);\n        found = true;\n      }\n    });\n    if (!found) setValue(0);\n  }, [pathname, minorRoutes]);\n\n  return (\n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor='primary'\n        textColor='primary'\n        onChange={handleChange}\n        aria-label='Minor routing links'\n      >\n        {labelWithMinorRouteList.map(({ label, route: minorRoute }) => (\n          <Tab\n            key={minorRoute}\n            label={label}\n            component={Link}\n            to={`${majorRoute}/${minorRoute}`}\n          />\n        ))}\n      </Tabs>\n    </Paper>\n  );\n};\n\nexport default PaperLinkTabs;\n","import { FormControl, MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst DesiredSelect = ({ inputLabel, selectionData, control, onSelect }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id='demo-simple-select-label'>{inputLabel}</InputLabel>\n      <Select\n        labelId='demo-simple-select-label'\n        id='demo-simple-select'\n        value={control}\n        onChange={({ target: { value } }) => {\n          // setStore(value);\n          onSelect(value);\n        }}\n      >\n        {selectionData.map(({ label, value }) => (\n          <MenuItem key={label + '-' + value} value={value}>\n            {label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default DesiredSelect;\n","import axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_BASE;\n\nconst axiosInstance = axios.create({\n  responseType: 'json',\n  baseURL: BACKEND_URL,\n});\n\nconst responseToData = (response) => response.data;\n\nconst getCustomers = (storeName, { limit, skip }) => {\n  return axiosInstance\n    .get('/customers', { params: { store: storeName, skip, limit } })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst createCustomer = (storeName, customerData) => {\n  return axiosInstance\n    .post('/customers', customerData, { params: { store: storeName } })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst deleteCustomer = (storeName, email) => {\n  return axiosInstance\n    .delete('/customers', { params: { store: storeName }, data: { email } })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst getCustomerCount = (storeName) => {\n  return axiosInstance\n    .get('/customers/count', { params: { store: storeName } })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst listFields = (storeName) => {\n  return axiosInstance\n    .get('/fields', { params: { store: storeName } })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst createField = (storeName, fieldName, fieldType) => {\n  return axiosInstance\n    .post(\n      '/fields',\n      { fieldName, fieldType },\n      {\n        params: { store: storeName },\n      }\n    )\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nconst deleteField = (storeName, fieldName) => {\n  return axiosInstance\n    .delete('/fields', {\n      params: { store: storeName },\n      data: { fieldName },\n    })\n    .then(responseToData)\n    .then((dataFormal) => dataFormal.data);\n};\n\nexport {\n  getCustomers,\n  createCustomer,\n  deleteCustomer,\n  listFields,\n  createField,\n  deleteField,\n  getCustomerCount,\n};\n","import { listFields } from './api';\n\nconst handlerFromSetter = (setter) => (e) => {\n  setter(e.target.value);\n};\n\nconst genEmptyFieldData = (storeName) => {\n  return listFields(storeName).then((data) => {\n    const { fields } = data;\n    const emptyFieldData = Object.keys(fields).reduce(\n      (accum, fieldName) => ({ ...accum, [fieldName]: fields[fieldName] }),\n      {}\n    );\n    // const emptyFieldData = fields.reduce((accum, { fieldName }) => {\n    //   return { ...accum, [fieldName]: '' };\n    // }, {});\n    return emptyFieldData;\n  });\n};\n\nexport { handlerFromSetter, genEmptyFieldData };\n","import { isNumeric, isEmail, isDate } from 'validator';\nimport phone from 'phone';\nimport {\n  STRING_T,\n  NUMBER_T,\n  EMAIL_T,\n  DATE_T,\n  STORES_VALUES,\n  TYPES_VALUES,\n} from './constants';\n\nconst stringExists = (input) => input && String(input).length;\nconst checkIfNumber = (input) => input && isNumeric(input + '');\nconst checkIfEmail = (input) => input && isEmail(input + '');\nconst checkIfDate = (input) => input && isDate(input);\nconst checkIfPhone = (input) => input && phone(input).length > 0;\nconst checkIfValidStore = (storeName) =>\n  storeName && STORES_VALUES.indexOf(storeName) !== -1;\nconst checkIfValidType = (typeName) =>\n  typeName && TYPES_VALUES.indexOf(typeName) !== -1;\n\nconst validatorForTypes = {\n  [STRING_T]: stringExists,\n  [NUMBER_T]: checkIfNumber,\n  [EMAIL_T]: checkIfEmail,\n  [DATE_T]: checkIfDate,\n};\n\nexport {\n  stringExists,\n  checkIfNumber,\n  checkIfEmail,\n  checkIfDate,\n  checkIfPhone,\n  checkIfValidStore,\n  checkIfValidType,\n  validatorForTypes,\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  SET_FLASH_MESSAGE,\n  SET_DIALOG,\n  ERROR,\n  SUCCESS,\n  UNSET_DIALOG,\n} from './constants';\n\nconst useSuccessFlash = () => {\n  const dispatch = useDispatch();\n  const setSuccessFlash = (flashMessage) => {\n    dispatch({\n      type: SET_FLASH_MESSAGE,\n      payload: { message: flashMessage, severity: SUCCESS },\n    });\n  };\n  return setSuccessFlash;\n};\n\nconst useErrorFlash = () => {\n  const dispatch = useDispatch();\n  const setErrorFlash = (flashMessage) => {\n    dispatch({\n      type: SET_FLASH_MESSAGE,\n      payload: { message: flashMessage, severity: ERROR },\n    });\n  };\n  return setErrorFlash;\n};\n\nconst useDialogSetter = () => {\n  const dispatch = useDispatch();\n  const setDialog = (payload) => {\n    dispatch({\n      type: SET_DIALOG,\n      payload,\n    });\n  };\n  return setDialog;\n};\n\nconst useDialogClose = () => {\n  const dispatch = useDispatch();\n  const closeDialog = () => {\n    dispatch({\n      type: UNSET_DIALOG,\n    });\n  };\n  return closeDialog;\n};\n\nexport { useSuccessFlash, useErrorFlash, useDialogSetter, useDialogClose };\n","import { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Grid, Typography, TextField, Button } from '@material-ui/core';\nimport { Delete as DeleteIcon } from '@material-ui/icons';\nimport MuiPhoneInput from 'material-ui-phone-number';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PaperLinkTabs from '../components/PaperLinkTabs';\nimport DesiredSelect from '../components/DesiredSelect';\n\nimport { createField, listFields, createCustomer, deleteField } from '../api';\nimport { handlerFromSetter } from '../utils';\nimport {\n  stringExists,\n  checkIfDate,\n  checkIfEmail,\n  checkIfPhone,\n  checkIfValidStore,\n  checkIfValidType,\n} from '../validators';\nimport {\n  useSuccessFlash,\n  useErrorFlash,\n  useDialogSetter,\n  useDialogClose,\n} from '../hooks';\n\nimport {\n  // ROUTE_ROOT,\n  ROUTE_MAJOR_ADD_INFO,\n  ROUTE_MINOR_CUSTOMER,\n  ROUTE_MINOR_FIELD,\n  STORES_VALUES,\n  BLACKLIST_CUSTOM_FIELD_NAMES_IN_LOWERCASE,\n  STORES,\n  TYPES,\n  STRING_T,\n  EMAIL_T,\n  NUMBER_T,\n  DATE_T,\n  SET_FLASH_MESSAGE,\n  STOCK_ERROR_FLASH,\n  // ROUTE_MINOR_ADD_FIELD,\n} from '../constants';\n\nconst ROUTE_ADD_CUSTOMER = `${ROUTE_MAJOR_ADD_INFO}/${ROUTE_MINOR_CUSTOMER}/`;\nconst ROUTE_ADD_FIELD = `${ROUTE_MAJOR_ADD_INFO}/${ROUTE_MINOR_FIELD}/`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n      padding: theme.spacing(1),\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  additionalFieldsSeperatorTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    // marginBottom: theme.spacing(1),\n  },\n  fieldDeletionButton: {\n    marginLeft: theme.spacing(3),\n  },\n  additionalFieldsTitle: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n  },\n  addFieldGrid: {\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AdditionalFields = ({\n  propertyMap,\n  setDataForParent,\n  dataRetrievalSignal,\n}) => {\n  const [formState, setFormState] = useState({});\n\n  useEffect(() => {\n    if (propertyMap && Object.keys(propertyMap).length > 0) {\n      const initialFormState = Object.keys(propertyMap).reduce(\n        (accum, currKey) => ({ ...accum, [currKey]: '' }),\n        {}\n      );\n      setFormState({ ...initialFormState });\n    }\n  }, [propertyMap]);\n\n  useEffect(() => {\n    if (!dataRetrievalSignal) return;\n    setDataForParent(formState);\n  }, [dataRetrievalSignal, formState, setDataForParent]);\n  return (\n    <>\n      {Object.keys(propertyMap).map((fieldName, index) => {\n        const fieldType = propertyMap[fieldName];\n        const onChange = (e) => {\n          setFormState({ ...formState, [fieldName]: e.target.value });\n          setDataForParent(formState);\n        };\n        let Inner = null;\n        switch (fieldType) {\n          case STRING_T:\n            Inner = () => (\n              <TextField\n                label={fieldName}\n                key={fieldName}\n                // value={value}\n                onChange={onChange}\n              />\n            );\n            break;\n          case NUMBER_T:\n            Inner = () => (\n              <TextField\n                label={fieldName}\n                key={fieldName}\n                // value={value}\n                onChange={onChange}\n                type='number'\n              />\n            );\n            break;\n          case EMAIL_T:\n            Inner = () => (\n              <TextField\n                label={fieldName}\n                key={fieldName}\n                // value={value}\n                onChange={onChange}\n                type='email'\n              />\n            );\n            break;\n          case DATE_T:\n            Inner = () => (\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  margin='normal'\n                  // id='date-picker-dialog'\n                  label={fieldName}\n                  format='MM/dd/yyyy'\n                  key={fieldName}\n                  // value={value}\n                  onChange={(date) => {\n                    setFormState({ ...formState, [fieldName]: date });\n                  }}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            );\n            break;\n          default:\n            Inner = () => null;\n        }\n\n        return Inner();\n      })}\n    </>\n  );\n};\n\nconst AddCustomer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [phone, setPhone] = useState();\n  const [dob, setDob] = useState(new Date());\n  const [store, setStore] = useState('');\n\n  const [formValid, setFormValid] = useState(false);\n  const [propertyMapForAdditional, setPropertyMapForAdditional] = useState(\n    null\n  );\n  const [additionalDataRetSignal, setAdditionalDataRetSignal] = useState(false);\n  const [additionalData, setAdditionalData] = useState(null);\n\n  useEffect(() => {\n    if (STORES_VALUES.indexOf(store.toLowerCase()) === -1) return;\n    listFields(store)\n      .then((data) => {\n        const { fields } = data;\n\n        setPropertyMapForAdditional(fields);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [store]);\n\n  useEffect(() => {\n    const anyStringInvalid = [firstName, lastName, address].some(\n      (current) => !stringExists(current)\n    );\n    if (\n      anyStringInvalid ||\n      !checkIfDate(dob) ||\n      !checkIfPhone(phone) ||\n      !checkIfEmail(email) ||\n      STORES_VALUES.indexOf(store) === -1\n    ) {\n      setFormValid(false);\n      return;\n    }\n\n    setAdditionalDataRetSignal();\n    setFormValid(true);\n  }, [\n    firstName,\n    lastName,\n    email,\n    address,\n    phone,\n    dob,\n    store,\n    setAdditionalDataRetSignal,\n  ]);\n\n  useEffect(() => {\n    if (additionalDataRetSignal) setAdditionalDataRetSignal(false);\n  }, [additionalDataRetSignal]);\n\n  const handleDobChange = (date) => {\n    setDob(date);\n  };\n\n  const submitForm = () => {\n    let payload = {\n      firstName,\n      lastName,\n      email,\n      address,\n      phone,\n      birthday: dob,\n      additionalFields: {},\n    };\n    payload = { ...payload, additionalFields: additionalData };\n\n    createCustomer(store, payload)\n      .then(() => {\n        dispatch({\n          type: SET_FLASH_MESSAGE,\n          payload: {\n            message: 'Customer successfully created!',\n            severity: 'success',\n          },\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_FLASH_MESSAGE,\n          payload: {\n            message:\n              'Oh no! An unexpected error has occured... please try again later',\n            severity: 'error',\n          },\n        });\n        console.error(err);\n      });\n  };\n\n  return (\n    <Grid container wrap='wrap'>\n      <form className={classes.root} noValidate autoComplete='off'>\n        <Grid container wrap='wrap'>\n          <Grid item sm={12}>\n            <TextField\n              id='first-name'\n              label='First Name'\n              value={firstName}\n              onChange={handlerFromSetter(setFirstName)}\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <TextField\n              id='last-name'\n              label='Last Name'\n              value={lastName}\n              onChange={handlerFromSetter(setLastName)}\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <TextField\n              id='email'\n              label='Email'\n              value={email}\n              onChange={handlerFromSetter(setEmail)}\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <TextField\n              style={{ width: '90%' }}\n              id='address'\n              label='Address'\n              multiline\n              rowsMax={5}\n              value={address}\n              onChange={handlerFromSetter(setAddress)}\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin='normal'\n                id='date-picker-dialog'\n                label='Date of Birth'\n                format='MM/dd/yyyy'\n                value={dob}\n                onChange={handleDobChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item sm={12}>\n            <MuiPhoneInput\n              id='phone-number'\n              defaultCountry='in'\n              label='Phone Number'\n              value={phone}\n              onChange={setPhone}\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <DesiredSelect\n              inputLabel='Store'\n              selectionData={STORES}\n              control={store}\n              onSelect={setStore}\n            />\n          </Grid>\n          <Grid className={classes.additionalFieldsSeperatorTitle} item xs={12}>\n            <Typography color='primary' variant='h5'>\n              Additional Fields\n            </Typography>\n          </Grid>\n          {propertyMapForAdditional && (\n            <AdditionalFields\n              propertyMap={propertyMapForAdditional}\n              setDataForParent={setAdditionalData}\n              dataRetrievalSignal={additionalDataRetSignal}\n            />\n          )}\n          <Grid item sm={12}>\n            <Button\n              onClick={submitForm}\n              variant='contained'\n              color='primary'\n              disabled={!formValid}\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Grid>\n  );\n};\n\nconst AddField = () => {\n  const classes = useStyles();\n  // const [store, setStoreOnChange] = useStore();\n  const [store, setStore] = useState(STORES_VALUES[0]);\n  const [chosenType, setChosenType] = useState('');\n  const [fieldName, setFieldName] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const [fieldMap, setFieldMap] = useState({});\n  const [triggerFieldsRetSwitch, setTriggerFieldsRetSwitch] = useState(false);\n  const setErrorFlash = useErrorFlash();\n  const setSuccessFlash = useSuccessFlash();\n  const dialogSetter = useDialogSetter();\n  const dialogClose = useDialogClose();\n\n  const retFieldsAgain = () => {\n    setTriggerFieldsRetSwitch(!triggerFieldsRetSwitch);\n  };\n\n  useEffect(() => {\n    listFields(store)\n      .then((data) => {\n        const { fields } = data;\n        setFieldMap(fields);\n      })\n      .catch((err) => {\n        console.error(err);\n        setErrorFlash(\n          'Failed to retrieve field data at this time... please try again later'\n        );\n      });\n  }, [store, setErrorFlash, triggerFieldsRetSwitch]);\n\n  useEffect(() => {\n    if (\n      stringExists(fieldName) &&\n      checkIfValidStore(store) &&\n      checkIfValidType(chosenType)\n    ) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [fieldName, store, chosenType]);\n\n  const submitForm = () => {\n    if (\n      BLACKLIST_CUSTOM_FIELD_NAMES_IN_LOWERCASE.indexOf(\n        fieldName.toLowerCase()\n      ) !== -1\n    ) {\n      return setErrorFlash(\n        'Additional Field cannot have name of a standard one'\n      );\n    }\n    createField(store, fieldName, chosenType)\n      .then(() => {\n        setSuccessFlash(\n          `Successfully created field ${fieldName} of type ${chosenType}`\n        );\n        retFieldsAgain();\n      })\n      .catch((err) => {\n        console.error(err);\n        setErrorFlash(STOCK_ERROR_FLASH);\n      });\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete='off'>\n      <Grid container>\n        <Grid item xs={12} md={3}>\n          <TextField\n            id='field-name'\n            label='Field Name'\n            value={fieldName}\n            onChange={handlerFromSetter(setFieldName)}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <DesiredSelect\n            inputLabel='Type'\n            selectionData={TYPES}\n            control={chosenType}\n            onSelect={setChosenType}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <DesiredSelect\n            inputLabel='Store'\n            selectionData={STORES}\n            control={store}\n            onSelect={setStore}\n          />\n        </Grid>\n        <Grid className={classes.additionalFieldsTitle} item xs={12}>\n          <Typography color='primary' variant='h5'>\n            Existing Additional Fields\n          </Typography>\n        </Grid>\n\n        {Object.keys(fieldMap).map((fieldName) => {\n          return (\n            <Grid\n              key={fieldName}\n              item\n              xs={12}\n              sm={10}\n              md={8}\n              className={classes.addFieldGrid}\n            >\n              {fieldName}: {fieldMap[fieldName]}{' '}\n              <Button\n                variant='contained'\n                color='secondary'\n                size='small'\n                className={classes.fieldDeletionButton}\n                onClick={() => {\n                  const desc = `${fieldName} of type ${fieldMap[fieldName]}`;\n                  dialogSetter({\n                    title: `Delete field ${desc}?`,\n                    body:\n                      'This operation cannot be undone and the deleted field can only be manually re-entered',\n                    onConfirm: () => {\n                      deleteField(store, fieldName)\n                        .then(() => {\n                          setSuccessFlash(`Successfully deleted ${desc}`);\n                          retFieldsAgain();\n                          dialogClose();\n                        })\n                        .catch((err) => {\n                          console.error(err);\n                          setErrorFlash(STOCK_ERROR_FLASH);\n                        });\n                    },\n                    onCancel: dialogClose,\n                  });\n                }}\n                startIcon={<DeleteIcon />}\n              >\n                Delete\n              </Button>\n            </Grid>\n          );\n        })}\n        <Grid item xs={12}>\n          <Button\n            onClick={submitForm}\n            variant='contained'\n            color='primary'\n            className={classes.submitButton}\n            disabled={!isValid}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nconst MINOR_ROUTES_WITH_LABELS = [\n  { label: 'Add Customer', route: ROUTE_MINOR_CUSTOMER },\n  { label: 'Add Field', route: ROUTE_MINOR_FIELD },\n];\n\nconst AddInfo = () => {\n  return (\n    <Grid container direction='column'>\n      <Grid item>\n        {/* <AddInfoTabs /> */}\n        <PaperLinkTabs\n          majorRoute={ROUTE_MAJOR_ADD_INFO}\n          labelWithMinorRouteList={MINOR_ROUTES_WITH_LABELS}\n        />\n      </Grid>\n      <Grid item>\n        <Switch>\n          <Redirect\n            exact\n            from={`${ROUTE_MAJOR_ADD_INFO}`}\n            to={`${ROUTE_ADD_CUSTOMER}`}\n          />\n          <Route\n            component={AddCustomer}\n            // render={<AddCustomer />}\n            path={`${ROUTE_ADD_CUSTOMER}`}\n          />\n          <Route component={AddField} path={`${ROUTE_ADD_FIELD}`} />\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AddInfo;\n","import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, Button } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport { Delete as DeleteIcon } from '@material-ui/icons';\nimport { isDate } from 'validator';\n\nimport DesiredSelect from '../components/DesiredSelect';\n\nimport {\n  useSuccessFlash,\n  useErrorFlash,\n  useDialogSetter,\n  useDialogClose,\n} from '../hooks';\nimport { getCustomers, getCustomerCount, deleteCustomer } from '../api';\nimport { genEmptyFieldData } from '../utils';\n\nimport { STORES, STORES_VALUES, STOCK_ERROR_FLASH } from '../constants';\n\nconst BasicPagination = ({ pages, onChange }) => {\n  return (\n    <Grid item sm={12}>\n      <Pagination count={pages} onChange={onChange} />\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  selectContainingPanel: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nconst CustomerListing = ({ currentStore }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageCount, setPageCount] = useState(null);\n  const [customerList, setCustomerList] = useState([]);\n  const [emptyFieldDataForStore, setEmptyFieldDataForStore] = useState({});\n  const [recheckSwitch, setRecheckSwitch] = useState(false);\n  const dialogSetter = useDialogSetter();\n  const dialogClose = useDialogClose();\n  const setSuccessFlash = useSuccessFlash();\n  const setFailureFlash = useErrorFlash();\n\n  useEffect(() => {\n    getCustomerCount(currentStore)\n      .then(({ customerCount }) => {\n        setPageCount(Math.ceil(customerCount / 10));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [currentStore]);\n\n  useEffect(() => {\n    if (!pageCount) return;\n    if (!currentPage && currentPage !== 0 && pageCount) setCurrentPage(1);\n  }, [pageCount, currentPage, recheckSwitch]);\n\n  useEffect(() => {\n    genEmptyFieldData(currentStore)\n      .then((genData) => {\n        setEmptyFieldDataForStore(genData);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [currentStore, recheckSwitch]);\n\n  useEffect(() => {\n    getCustomers(currentStore, { limit: 10, skip: (currentPage - 1) * 10 })\n      .then((data) => {\n        setCustomerList(data.customers);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [currentPage, currentStore, recheckSwitch]);\n\n  const onPageChange = (_event, number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <Grid container direction='column'>\n      {customerList.map((current, index) => {\n        const onClose = dialogClose;\n        const onConfirm = () => {\n          deleteCustomer(currentStore, current.email)\n            .then(() => {\n              setSuccessFlash('Successfully deleted customer');\n              dialogClose();\n              setRecheckSwitch(!recheckSwitch);\n            })\n            .catch((err) => {\n              console.error(err);\n              setFailureFlash(STOCK_ERROR_FLASH);\n              dialogClose();\n            });\n        };\n        return (\n          <Grid\n            key={current.email}\n            item\n            style={{\n              marginBottom: '0.1em',\n              marginTop: index === 0 ? '0.1em' : null,\n            }}\n          >\n            <Card style={{ padding: '1em' }}>\n              <Grid container>\n                <Grid\n                  item\n                  xs={12}\n                  container\n                  style={{ justifyContent: 'flex-end' }}\n                >\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => {\n                      dialogSetter({\n                        title: 'Delete customer ' + current.email + '?',\n                        body:\n                          'This operation cannot be undone and the deleted customer can only be manually re-entered',\n                        onConfirm,\n                        onCancel: onClose,\n                      });\n                    }}\n                    startIcon={<DeleteIcon />}\n                  >\n                    Delete\n                  </Button>\n                </Grid>\n                <Grid item xs={12}>\n                  First Name: {current.firstName}\n                </Grid>\n                <Grid item xs={12}>\n                  Last Name: {current.lastName}\n                </Grid>\n                <Grid item xs={12}>\n                  Email: {current.email}\n                </Grid>\n                <Grid item xs={12}>\n                  Address: {current.address}\n                </Grid>\n                <Grid item xs={12}>\n                  Phone: {current.phone}\n                </Grid>\n                <Grid item xs={12}>\n                  Birthday: {new Date(current.birthday).toDateString()}\n                </Grid>\n                <Grid item xs={12}>\n                  Store: {current.store}\n                </Grid>\n                <Grid item container xs={12}>\n                  {typeof current.additionalFields === 'object' &&\n                    Object.keys({\n                      ...emptyFieldDataForStore,\n                      ...current.additionalFields,\n                    }).map((fieldName) => {\n                      let value = current.additionalFields[fieldName];\n                      const dateVal = new Date(value);\n                      const validDate = isDate(dateVal);\n                      if (validDate) value = dateVal.toDateString();\n\n                      return (\n                        <Grid key={fieldName} item xs={12}>\n                          {fieldName}: {value}\n                        </Grid>\n                      );\n                    })}\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n        );\n      })}\n      {!!pageCount && (\n        <BasicPagination\n          pages={pageCount}\n          page={currentPage}\n          onChange={onPageChange}\n        />\n      )}\n    </Grid>\n  );\n};\n\nconst ListInfo = () => {\n  const [currentStore, setCurrentStore] = useState(STORES_VALUES[0]);\n  const classes = useStyles();\n\n  return (\n    <Grid container direction='column'>\n      <Grid item>\n        <Card className={classes.selectContainingPanel}>\n          <DesiredSelect\n            inputLabel='Store'\n            selectionData={STORES}\n            control={currentStore}\n            onSelect={setCurrentStore}\n          />\n        </Card>\n      </Grid>\n      <Grid item>\n        <CustomerListing currentStore={currentStore} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ListInfo;\n","import {\n  SET_FLASH_MESSAGE,\n  UNSET_FLASH_MESSAGE,\n  SET_DIALOG,\n  UNSET_DIALOG,\n} from '../constants';\n\nconst initialState = {\n  flashMessage: null,\n  severity: null,\n  dialog: {\n    title: null,\n    body: null,\n    onConfirm: null,\n    onCancel: null,\n  },\n};\n\nfunction notificationReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_FLASH_MESSAGE:\n      return {\n        ...state,\n        flashMessage: action.payload.message,\n        severity: action.payload.severity,\n      };\n    case UNSET_FLASH_MESSAGE:\n      return { ...state, flashMessage: null, severity: null };\n    case SET_DIALOG:\n      return { ...state, dialog: action.payload };\n    case UNSET_DIALOG:\n      return { ...state, dialog: { ...initialState.dialog } };\n    default:\n      return state;\n  }\n}\n\nexport default notificationReducer;\n","import { combineReducers } from 'redux';\n\nimport notificationReducer from './notification';\n\nconst rootReducer = combineReducers({\n  notification: notificationReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/root';\n\nconst store = createStore(rootReducer);\n\nexport { store };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n  },\n});\n\nconst mainGridConfigForSideSpace = {\n  xs: false,\n  sm: 2,\n};\n\nconst mainGridConfigForContent = {\n  xs: 12,\n  sm: 8,\n};\n\nexport { theme, mainGridConfigForSideSpace, mainGridConfigForContent };\n","import React, { Fragment as ReactFragment } from 'react';\nimport { Grid, Snackbar } from '@material-ui/core';\nimport { Alert as MuiAlert } from '@material-ui/lab';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Header from './components/Header';\nimport MainTabs from './components/MainTabs';\nimport ConfirmDialog from './components/ConfirmDialog';\n\nimport AddInfoPage from './pages/AddInfo';\nimport ListInfoPage from './pages/ListInfo';\n\nimport { store } from './store';\n\nimport { theme } from './config/themeing';\n\nimport {\n  ROUTE_ROOT,\n  ROUTE_MAJOR_ADD_INFO,\n  ROUTE_MAJOR_LIST_INFO,\n  UNSET_FLASH_MESSAGE,\n} from './constants';\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n};\n\nfunction App() {\n  const {\n    flashMessage,\n    severity,\n    dialog: { title: dialogOpen },\n  } = useSelector((state) => state.notification);\n  const dispatch = useDispatch();\n\n  const snackClose = () => {\n    dispatch({ type: UNSET_FLASH_MESSAGE });\n  };\n\n  return (\n    <ReactFragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Grid container direction='column'>\n          <Grid item>\n            <Header />\n          </Grid>\n          {/* <Header /> */}\n          {/* <Grid item container>\n            <Grid {...mainGridConfigForSideSpace} />\n            <Grid {...mainGridConfigForContent}>\n              <Header />\n            </Grid>\n            <Grid {...mainGridConfigForSideSpace} />\n          </Grid> */}\n          <Grid item container>\n            {/* <Grid {...mainGridConfigForSideSpace} item /> */}\n            <Grid sm={false} md={2} item />\n            <Grid sm={12} md={8} item container direction='column'>\n              {/* This is where we will have the content */}\n              <Router>\n                <MainTabs />\n                <Switch>\n                  <Route component={AddInfoPage} path={ROUTE_MAJOR_ADD_INFO} />\n                  <Route\n                    component={ListInfoPage}\n                    path={ROUTE_MAJOR_LIST_INFO}\n                  />\n                  <Redirect from={ROUTE_ROOT} to={ROUTE_MAJOR_ADD_INFO} exact />\n                </Switch>\n              </Router>\n            </Grid>\n            <Grid sm={false} md={2} item />\n            {/* <Grid {...mainGridConfigForSideSpace} item /> */}\n          </Grid>\n        </Grid>\n        {flashMessage && (\n          <Snackbar\n            open={flashMessage && flashMessage.length ? true : false}\n            autoHideDuration={6000}\n            onClose={snackClose}\n          >\n            <Alert onClose={snackClose} severity={severity}>\n              {flashMessage}\n            </Alert>\n          </Snackbar>\n        )}\n        {dialogOpen && <ConfirmDialog />}\n      </ThemeProvider>\n    </ReactFragment>\n  );\n}\n\nfunction AppWithRedux() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nexport default AppWithRedux;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}